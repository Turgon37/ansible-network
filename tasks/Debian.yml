---
- name: Make sure the include line is there in interfaces file
  lineinfile: >
     regexp="^source\ \/etc\/network\/interfaces.d\/\*"
     line="source {{ network__net_path }}/*"
     dest=/etc/network/interfaces
     state=present
     insertafter=EOF
  tags: ['network']

- name: Create the directory for interface cfg files
  file:
    path: '{{ network__net_path }}'
    state: directory
  tags: ['network']

## Check invalid configuration

- name: List configured network interfaces
  find:
    paths: "{{ network__net_path }}/"
    patterns: "ifcfg-*"
  register: _network__interfaces
  tags: ['network']

- name: Remove all inconsistent interfaces configurations
  become: yes
  file:
    state: absent
    path: '{{ item }}'
  with_items: "{{ _network__interfaces.files | map(attribute='path') | list }}"
  when: item | basename | replace('ifcfg-', '') not in network__interfaces | map(attribute='device') | list
  notify: [ 'Restart Network service' ]
  tags: ['network']

### ETHERNET

- name: Create the network configuration file for ethernet devices
  template:
    src: 'ethernet_{{ ansible_os_family }}.j2'
    dest: '{{ network__net_path }}/ifcfg-{{ item.device }}'
  with_items: '{{ network__ether_interfaces }}'
  notify: [ 'Restart Network service' ]
  tags: ['network']

### VLAN

- name: Create the network configuration file for VLAN devices
  template:
    src: 'vlan_{{ ansible_os_family }}.j2'
    dest: '{{ network__net_path }}/ifcfg-{{ item.device }}'
  with_items: '{{ network__vlan_interfaces }}'
  notify: [ 'Restart Network service' ]
  tags: ['network']
